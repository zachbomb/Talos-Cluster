# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nzbget
  namespace: media
spec:
<<<<<<< HEAD
  interval: 15m
  timeout: 20m
  releaseName: nzbget
  chart:
    spec:
      chart: nzbget
      version: 26.0.7
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
=======
    interval: 15m
    chart:
        spec:
            chart: nzbget
            version: 26.0.8
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
    timeout: 20m
    releaseName: nzbget
    values:
        credentials:
            s3:
                type: s3
                url: "${S3URL}"
                bucket: "${S3PREFIX}-nzbget"
                accessKey: "${S3ID}"
                secretKey: "${S3KEY}"
                encrKey: "${S3KEY}"
        TZ: America/Los_Angeles
        ingress:
            main:
                enabled: true
                ingressClassName: internal
                hosts:
                    - host: "nzbget.${BASE_DOMAIN}"
                      paths:
                        - path: /
                          pathType: Prefix
                integrations:
                    traefik:
                        enabled: false
                        middlewares:
                         - name: local
                           namespace: traefik
                    certManager:
                        enabled: true
                        certificateIssuer: wethecommon-prod-cert
                    homepage:
                        description: Usenet Downloader
                        enabled: true
                        group: Media Downloaders
                        icon: ""
                        name: NZBget
                        widget:
                            custom:
                                username: zach
                                password: WZM-jvt1fxq*njk1qak
>>>>>>> refs/remotes/origin/main

  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3

  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3

  values:
    TZ: America/Los_Angeles

    credentials:
      s3:
        type: s3
        url: "${S3URL}"
        bucket: "${S3PREFIX}-nzbget"
        accessKey: "${S3ID}"
        secretKey: "${S3KEY}"
        encrKey: "${S3KEY}"

    ingress:
      main:
        enabled: true
        ingressClassName: internal
        hosts:
          - host: "nzbget.${BASE_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        integrations:
          traefik:
            enabled: false
            middlewares:
              - name: local
                namespace: traefik
          certManager:
            enabled: true
            certificateIssuer: wethecommon-prod-cert
          homepage:
            enabled: true
            name: NZBget
            group: Media Downloaders
            description: Usenet Downloader
            icon: ""
            widget:
              enabled: true
              custom:
                username: zach
                password: WZM-jvt1fxq*njk1qak

    service:
      main:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: ${NZBGET_IP}
        ports:
          main:
            port: 10057
            targetPort: 6789
            protocol: http

    podOptions:
      dnsConfig:
        options:
          - name: ndots
            value: "3"

    persistence:
      config:
        enabled: true
        mountPath: /config
        volsync:
          - name: config
            type: restic
            credentials: s3
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: "30 2 * * *"

      backup:
        enabled: true
        mountPath: /backups
        volsync:
          - name: b2
            type: restic
            credentials: s3
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: "0 3 * * *"

      media:
        enabled: true
        type: nfs
        server: 192.168.10.123
        path: /mnt/Pibbs-Horde/media/data
        mountPath: /media
        mountOptions:
          - nfsvers=4
          - tcp
          - intr
          - hard
          - noatime
          - nodiratime
          - nolock

      movies:
        enabled: true
        type: nfs
        server: 192.168.10.123
        path: /mnt/Pibbs-Horde/media/data/media/movies
        mountPath: /movies
        mountOptions:
          - nfsvers=4
          - tcp
          - intr
          - hard
          - noatime
          - nodiratime
          - nolock

      tv:
        enabled: true
        type: nfs
        server: 192.168.10.123
        path: /mnt/Pibbs-Horde/media/data/media/tv
        mountPath: /tv
        mountOptions:
          - nfsvers=4
          - tcp
          - intr
          - hard
          - noatime
          - nodiratime
          - nolock

      music:
        enabled: true
        type: nfs
        server: 192.168.10.123
        path: /mnt/Pibbs-Horde/media/data/media/music
        mountPath: /music
        mountOptions:
          - nfsvers=4
          - tcp
          - intr
          - hard
          - noatime
          - nodiratime
          - nolock

      downloads:
        enabled: true
        type: nfs
        server: 192.168.10.123
        path: /mnt/Pibbs-Horde/media/data/usenet
        mountPath: /usenet
        mountOptions:
          - nfsvers=4
          - tcp
          - intr
          - hard
          - noatime
          - nodiratime
          - nolock

    resources: {}

    securityContext:
      container:
        UMASK: "0022"
        runAsGroup: 1000
        runAsUser: 1000
      pod:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    workload:
      main:
        podSpec:
          containers:
            main:
              probes:
                liveness:
                  enabled: false
                readiness:
                  enabled: false
                startup:
                  enabled: false
