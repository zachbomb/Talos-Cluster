apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: crowdsec
  namespace: crowdsec
spec:
  interval: 15m
  timeout: 20m
  maxHistory: 3
  chart:
    spec:
      chart: crowdsec
      version: 0.19.5
      sourceRef:
        kind: HelmRepository
        name: crowdsec
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    TZ: America/Los_Angeles
    container_runtime: containerd
    tls:
      enabled: true
      bouncer:
        reflector:
          namespaces:
            - traefik
    agent:
      acquisition:
        - namespace: traefik
          podName: traefik-*
          program: traefik
          poll_without_inotify: true
      env:
        - name: PARSERS
          value: "crowdsecurity/cri-logs"
        - name: COLLECTIONS
          value: "crowdsecurity/traefik"
        - name: DISABLE_PARSERS
          value: "crowdsecurity/whitelists"
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    lapi:
      dashboard:
        enabled: true
        ingress:
          enabled: true
          host: crowdsec.${BASE_DOMAIN}
          integrations:
            certManager:
              enabled: true
              certificateIssuer: wethecommon-prod-cert
            nginx:
              enabled: false
              ingressClassName: internal
            traefik:
              enabled: true
              entrypoints:
                - websecure
              forceTLS: false
              middlewares:
                - name: secure-chain
                  namespace: traefik
      env:
        - name: DISABLE_ONLINE_API
          value: "false"
        - name: ENROLL_KEY
          value: "${CSKEY}"
        - name: ENROLL_INSTANCE_NAME
          value: "cluster"
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      service:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: "${CROWDSEC_IP}"
        ports:
          http:
            port: 8080
            targetPort: 8080
            protocol: TCP
          https:
            port: 8443
            targetPort: 8443
            protocol: TCP
    autoscaling:
      vpa:
        enabled: true
    resources:
      requests:
        memory: 1024Mi
        cpu: 50m
      limits:
        memory: 4Gi
        cpu: 500m
    workload:
      main: null
    podOptions:
      hostUsers: true
    service: null
